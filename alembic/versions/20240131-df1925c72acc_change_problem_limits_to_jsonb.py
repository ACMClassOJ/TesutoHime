"""change problem limits to JSONB

Revision ID: df1925c72acc
Revises: 4ca6c888463b
Create Date: 2024-01-31 09:59:02.989359

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'df1925c72acc'
down_revision: Union[str, None] = '4ca6c888463b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('problem', sa.Column('limits_new', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    for row in 'description', 'input', 'output', 'example_input', 'example_output', 'data_range':
        op.execute(f"UPDATE problem SET {row} = NULL WHERE {row} = 'None' OR {row} = '';")
    op.execute('UPDATE problem SET limits_new = limits::JSON;')
    op.drop_column('problem', 'limits')
    op.alter_column('problem', 'limits_new', new_column_name='limits')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('problem', sa.Column('limits_old', sa.TEXT(), autoincrement=False, nullable=True))
    op.execute('UPDATE problem SET limits_old = limits::text;')
    op.drop_column('problem', 'limits')
    op.alter_column('problem', 'limits_old', new_column_name='limits')
    # ### end Alembic commands ###
